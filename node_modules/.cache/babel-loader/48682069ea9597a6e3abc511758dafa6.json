{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\n\n// middlewares\nimport thunkMiddleware from 'redux-thunk';\nimport logger from 'redux-logger';\n\n// Import custom components\nimport rootReducer from '../reducers';\nfunction saveToLocalStorage(state) {\n  try {\n    var serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (e) {\n    console.log(e);\n  }\n}\nfunction loadFromLocalStorage() {\n  try {\n    var serializedState = localStorage.getItem('state');\n    if (serializedState === null) return undefined;\n    return JSON.parse(serializedState);\n  } catch (e) {\n    console.log(e);\n    return undefined;\n  }\n}\nvar persistedState = loadFromLocalStorage();\n\n/**\n * Create a Redux store that holds the app state.\n */\nvar store = createStore(rootReducer, persistedState, compose(applyMiddleware(thunkMiddleware),\n//For working redux dev tools in chrome (https://github.com/zalmoxisus/redux-devtools-extension)\nwindow.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : function (f) {\n  return f;\n}));\nvar unsubscribe = store.subscribe(function () {\n  var state = store.getState();\n  saveToLocalStorage(state);\n});\nexport default store;","map":{"version":3,"names":["createStore","applyMiddleware","compose","thunkMiddleware","logger","rootReducer","saveToLocalStorage","state","serializedState","JSON","stringify","localStorage","setItem","e","console","log","loadFromLocalStorage","getItem","undefined","parse","persistedState","store","window","__REDUX_DEVTOOLS_EXTENSION__","f","unsubscribe","subscribe","getState"],"sources":["/home/moez/all_in_one_multikart_react/front-end/src/store/index.js"],"sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\n\n// middlewares\nimport thunkMiddleware from 'redux-thunk'\nimport logger from 'redux-logger'\n\n// Import custom components\nimport rootReducer from '../reducers';\n\n\nfunction saveToLocalStorage(state) {\n    try {\n        const serializedState = JSON.stringify(state)\n        localStorage.setItem('state', serializedState)\n    }catch(e){\n        console.log(e);\n    }\n}\n\nfunction loadFromLocalStorage() {\n    try {\n        const serializedState = localStorage.getItem('state')\n        if(serializedState === null) return undefined\n        return JSON.parse(serializedState)\n    }catch (e) {\n        console.log(e)\n        return undefined\n    }\n}\n\nconst persistedState = loadFromLocalStorage()\n\n/**\n * Create a Redux store that holds the app state.\n */\nconst store = createStore(rootReducer, persistedState, compose(\n    applyMiddleware(thunkMiddleware),\n\n    //For working redux dev tools in chrome (https://github.com/zalmoxisus/redux-devtools-extension)\n    window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : function (f) {\n        return f;\n    }\n));\n\nconst unsubscribe = store.subscribe(() => {\n    const state = store.getState();\n    saveToLocalStorage(state);\n});\n\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,OAAO,QAAQ,OAAO;;AAE7D;AACA,OAAOC,eAAe,MAAM,aAAa;AACzC,OAAOC,MAAM,MAAM,cAAc;;AAEjC;AACA,OAAOC,WAAW,MAAM,aAAa;AAGrC,SAASC,kBAAkBA,CAACC,KAAK,EAAE;EAC/B,IAAI;IACA,IAAMC,eAAe,GAAGC,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC;IAC7CI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,eAAe,CAAC;EAClD,CAAC,QAAMK,CAAC,EAAC;IACLC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;EAClB;AACJ;AAEA,SAASG,oBAAoBA,CAAA,EAAG;EAC5B,IAAI;IACA,IAAMR,eAAe,GAAGG,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;IACrD,IAAGT,eAAe,KAAK,IAAI,EAAE,OAAOU,SAAS;IAC7C,OAAOT,IAAI,CAACU,KAAK,CAACX,eAAe,CAAC;EACtC,CAAC,QAAOK,CAAC,EAAE;IACPC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IACd,OAAOK,SAAS;EACpB;AACJ;AAEA,IAAME,cAAc,GAAGJ,oBAAoB,CAAC,CAAC;;AAE7C;AACA;AACA;AACA,IAAMK,KAAK,GAAGrB,WAAW,CAACK,WAAW,EAAEe,cAAc,EAAElB,OAAO,CAC1DD,eAAe,CAACE,eAAe,CAAC;AAEhC;AACAmB,MAAM,CAACC,4BAA4B,GAAGD,MAAM,CAACC,4BAA4B,CAAC,CAAC,GAAG,UAAUC,CAAC,EAAE;EACvF,OAAOA,CAAC;AACZ,CACJ,CAAC,CAAC;AAEF,IAAMC,WAAW,GAAGJ,KAAK,CAACK,SAAS,CAAC,YAAM;EACtC,IAAMnB,KAAK,GAAGc,KAAK,CAACM,QAAQ,CAAC,CAAC;EAC9BrB,kBAAkB,CAACC,KAAK,CAAC;AAC7B,CAAC,CAAC;AAEF,eAAec,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module"}